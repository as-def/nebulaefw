; File Looping Granular Instrument
; Qu-bit Electronix
; Author: Stephen Hensley
; San Clemente, CA
; 2017
;
; Global Data from External Software
; All of the following globals are set from external software.
; Controls are named after their hardware control name.
; gilen[] - Array containing all file lengths
; gkpitch - percentage of original pitch. (Negative values allowed)
; gkspeed - percentage of original speed. (Negative values allowed)
; gkloopstart - percentage of file to start at.
; gkloopsize - percentage of post-loopstart size file to play
; gkdensity - 
; gkoverlap - 
; gkmix - percentage of granular sound (inverse percentage of dry audio file)
; gkdegrade - percentage of degradation of audio output signal
; gkfilesel - index of table containing audio file data.
; gkfreeze - binary freeze state value (0 or 1)
; gknext - trigger input for advancing files
; gkreset - trigger input for restarting phase to loopstart point.
; gksource - toggles between live input source/and usb file sources
; gkrecord - toggles record behavior
;
; Global Tables
giWin		ftgen	0, 0, 8192, 20, 9, 1 ; Hamming Window 
giCosine	ftgen	0, 0, 8193, 9, 1, 1, 90 ; Cosine Table
giftL		ftgen	0, 0, -(10 * sr), 2, 0
giftR		ftgen	0, 0, -(10 * sr), 2, 0

; The Following UDOs are from the Csound FLOSS Manual on recording and playing buffers
opcode BufRec1, k, aikkkk ; records to a buffer
ain, ift, krec, kstart, kend, kwrap xin
setksmps 1
kendsmps = kend*sr ; end point in samples
kendsmps = (kendsmps == 0 || kendsmps > ftlen(ift) ? ftlen(ift) : kendsmps)
kfinished = 0
knew changed krec ; 1 if record just started
if krec == 1 then
	if knew == 1 then
		kndx = kstart * sr - 1 ; first index to write
	endif
	if kndx >= kendsmps - 1 && kwrap == 1 then
		kndx = -1
	endif
	if kndx < kendsmps -1 then
		kndx = kndx + 1
		andx = kndx
		tabw ain, andx, ift
	else
		kfinished = 1
	endif
endif
xout kfinished
endop

opcode BufRec2, k, aaiikkkk ; records to a stereo buffer
ainL, ainR, iftL, iftR, krec, kstart, kend, kwrap xin
kfin BufRec1 ainL, iftL, krec, kstart, kend, kwrap
kfin BufRec1 ainR, iftR, krec, kstart, kend, kwrap
xout kfin
endop

instr 1

ainl, ainr inch 1, 2
;klen = gilen[gkfilesel]  ; Length of Current File in samples
klen = 10

kloopstart = gkloopstart * klen
kloopsize = gkloopsize * (klen-kloopstart)
if (kloopsize == 0) then
	kloopsize = 1
endif
iamp = 0.8

if (gkfreeze == 1) then
	gkspeed = 0.0
endif

asynctrig = 0.0
if (gkreset == 1) then
	asynctrig = 1.0
	gkreset = 0
endif

; Set phs of playback for mincer and partikkel
aphs, aphssync syncphasor (1 / kloopsize) * gkspeed, asynctrig
atime = kloopstart + (kloopsize * aphs)
agphs = atime / klen

ifftsize = 1024 ; mincer fft size. 

;arphs, arphssync syncphasor (1 / kloopsize),  asynctrig
;artime = kloopstart + (kloopsize * arphs)
;tablew ainl,artime,giftL,0,0,0
;tablew ainr,artime,giftR,0,0,0
kfin BufRec2, ainl, ainr, giftL, giftR, gkrecord, kloopstart, kloopsize, 1
asigl mincer atime, iamp, gkpitch, giftL, 1, ifftsize
asigr mincer atime, iamp, gkpitch, giftR, 1, ifftsize

aoutl = ((asigl * gkmix) + (ainl * (1.0 - gkmix))) 
aoutr = ((asigr * gkmix) + (ainr * (1.0 - gkmix)))
outs aoutl, aoutr ; output

endin
